{"version":3,"file":"static/webpack/static/development/pages/index.js.b51b939ed6e3ca85f41e.hot-update.js","sources":["webpack:///./components/layout/intro.tsx"],"sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\nimport {\n  Typography,\n  Grid,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Button,\n} from \"@material-ui/core\";\nimport Typist from \"react-typist\";\nconst styles = createStyles({\n  gridContainer: {\n    height: \"100%\",\n    gap: \"10px\",\n  },\n  copyright: {\n    position: \"absolute\",\n    left: \"16px\",\n    top: \"16px\",\n    color: \"rgba(255,255,255,0.3)\",\n    width: \"100vw\",\n  },\n  button: {\n    color: \"white\",\n  },\n  typist: {\n    textAlign: \"center\",\n    overflowWrap: \"break-word\",\n    wordWrap: \"break-word\",\n    margin: \"0px 10px\",\n  },\n});\ninterface State {\n  typing: boolean;\n}\ninterface Props extends WithStyles<typeof styles> {}\nclass Intro extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n  state = { typing: true };\n  done = () => {\n    setTimeout(() => {\n      this.setState({ typing: !this.state.typing });\n    }, 2000);\n  };\n  render() {\n    return (\n      <div\n        style={{\n          height: \"100vh\",\n          width: \"100%\",\n          background: `url(${process.env.BACKEND_URL}/pictures/background_dortmund.jpg) no-repeat center center`,\n          backgroundSize: \"cover\",\n        }}\n      >\n        <div style={{ height: \"100%\", background: \"rgba(0,0,0,0.3)\" }}>\n          <Grid\n            container\n            direction=\"column\"\n            alignContent=\"center\"\n            alignItems=\"center\"\n            justify=\"center\"\n            classes={{ root: this.props.classes.gridContainer }}\n          >\n            <Grid item>\n              <Typography variant=\"h3\" component=\"h3\">\n                <Typist\n                  className={this.props.classes.typist}\n                  key={this.state.typing}\n                  onTypingDone={this.done}\n                  cursor={{}}\n                >\n                  <span\n                    style={{ color: \"white\", textShadow: \"3px 3px 4px #777\" }}\n                  >\n                    Hallo, mein Name ist Jannik\n                  </span>\n                  <Typist.Backspace count={30} delay={2000} />\n                  <span\n                    style={{ color: \"white\", textShadow: \"3px 3px 4px #777\" }}\n                  >\n                    Ich bin Student der Wirtschaftsinformatik\n                  </span>\n                  <Typist.Backspace count={33} delay={2000} />\n                  <span\n                    style={{ color: \"white\", textShadow: \"3px 3px 4px #777\" }}\n                  >\n                    Borussia Dortmund Fan\n                  </span>\n                </Typist>\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Link href={`${process.env.BACKEND_URL}/#navigation`}>\n                <Button variant=\"contained\" color=\"primary\">\n                  Lernen wir uns kennen\n                </Button>\n              </Link>\n            </Grid>\n          </Grid>\n          <Link href=\"https://pixabay.com/de/photos/dortmund-dortmunder-u-u-turm-602962/\">\n            <a target=\"_blank\" className={`${this.props.classes.copyright}`}>\n              Foto von sxss\n            </a>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Intro);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAfA;AACA;AAyBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AAAA;AACA;AAJA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AATA;AAEA;AACA;;;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAzEA;AACA;AA2EA;;;;A","sourceRoot":""}